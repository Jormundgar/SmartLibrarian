version: '3.8'

services:
  apigateway:
    image: 'liorlakhmann/apigateway-slp:0.0.1'
    build:
      context: .
      dockerfile: APIGateway/Dockerfile
    container_name: API-GATEWAY_SLP
    ports:
      - "8050:8050"
  backend:
    image: 'liorlakhmann/backend-slp:1.1.1'
    build:
      context: .
      dockerfile: Backend/Dockerfile
    container_name: BACKEND_SMARTLIBRARIAN
    ports:
      - "8070:8070"
    depends_on:
      - db-backend
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/smartlibrarian
  security:
    image: 'liorlakhmann/security-slp:0.0.1'
    build:
      context: .
      dockerfile: Security/Dockerfile
    container_name: SECURITY_SMARTLIBRARIAN
    ports:
      - "8060:8060"
    depends_on:
      - db-security
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5442/smartlibrariansec
  frontend:
    image: 'liorlakhmann/frontend-slp:0.0.1'
    build:
      context: .
      dockerfile: Frontend/Dockerfile
    container_name: FRONTEND_SMARTLIBRARIAN
    ports:
      - "8080:8080"
  db-backend:
    image: postgres:latest
    container_name: SMARTLIBRARIAN_DB
    restart: always
    environment:
      POSTGRES_DB: smartlibrarian
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  db-security:
    image: postgres:latest
    container_name: SLP_SECURITY_DB
    restart: always
    environment:
      POSTGRES_DB: smartlibrariansec
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5442:5432"
    volumes:
      - ./initsec.sql:/docker-entrypoint-initdb.d/initsec.sql